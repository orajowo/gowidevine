name: Deploy GoDoc to GitHub Pages

on:
  push:
    branches:
      - master # Or 'master'

# Grant permissions for the action to write to the gh-pages branch
permissions:
  contents: write

jobs:
  deploy-godoc:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out your repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up the Go environment
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23' # Use your project's Go version

      # 3. Install the godoc tool
      - name: Install godoc
        run: go install golang.org/x/tools/cmd/godoc@latest

      # 4. Create the output directory for the HTML files
      - name: Create output directory
        run: mkdir -p godoc_html

      # 5. Generate static HTML (Corrected Step)
      - name: Generate static HTML documentation
        run: |
          # Automatically get the module path from the go.mod file
          MODULE_PATH=$(grep module go.mod | awk '{print $2}')
          echo "Module path is $MODULE_PATH"
          
          # Run the godoc server in the background
          godoc -http=:6060 &
          
          # Give the server a moment to start up
          sleep 5 
          
          # Use wget with --no-parent to prevent it from downloading the entire standard library
          wget --recursive --no-parent --convert-links --page-requisites \
               --no-host-directories --directory-prefix=godoc_html/ \
               http://localhost:6060/pkg/$MODULE_PATH/

      # 6. Deploy the generated HTML to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # The publish directory is correct, as wget creates the /pkg/ structure
          publish_dir: ./godoc_html/pkg
          keep_files: false
